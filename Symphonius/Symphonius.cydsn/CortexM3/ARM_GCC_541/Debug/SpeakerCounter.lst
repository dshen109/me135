ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SpeakerCounter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SpeakerCounter_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SpeakerCounter_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	SpeakerCounter_Enable, %function
  25              	SpeakerCounter_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\SpeakerCounter.c"
   1:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SpeakerCounter.c **** * File Name: SpeakerCounter.c  
   3:Generated_Source\PSoC5/SpeakerCounter.c **** * Version 3.0
   4:Generated_Source\PSoC5/SpeakerCounter.c **** *
   5:Generated_Source\PSoC5/SpeakerCounter.c **** *  Description:
   6:Generated_Source\PSoC5/SpeakerCounter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/SpeakerCounter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/SpeakerCounter.c **** *
   9:Generated_Source\PSoC5/SpeakerCounter.c **** *   Note:
  10:Generated_Source\PSoC5/SpeakerCounter.c **** *     None
  11:Generated_Source\PSoC5/SpeakerCounter.c **** *
  12:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
  13:Generated_Source\PSoC5/SpeakerCounter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/SpeakerCounter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/SpeakerCounter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/SpeakerCounter.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/SpeakerCounter.c **** 
  19:Generated_Source\PSoC5/SpeakerCounter.c **** #include "SpeakerCounter.h"
  20:Generated_Source\PSoC5/SpeakerCounter.c **** 
  21:Generated_Source\PSoC5/SpeakerCounter.c **** uint8 SpeakerCounter_initVar = 0u;
  22:Generated_Source\PSoC5/SpeakerCounter.c **** 
  23:Generated_Source\PSoC5/SpeakerCounter.c **** 
  24:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_Init
  26:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
  27:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
  28:Generated_Source\PSoC5/SpeakerCounter.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/SpeakerCounter.c **** * 
  30:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 2


  31:Generated_Source\PSoC5/SpeakerCounter.c **** *  void  
  32:Generated_Source\PSoC5/SpeakerCounter.c **** *
  33:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
  34:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
  35:Generated_Source\PSoC5/SpeakerCounter.c **** *
  36:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_Init(void) 
  38:Generated_Source\PSoC5/SpeakerCounter.c **** {
  39:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!SpeakerCounter_UsingFixedFunction && !SpeakerCounter_ControlRegRemoved)
  40:Generated_Source\PSoC5/SpeakerCounter.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!SpeakerCounter_UsingFixedFunction && !SpeakerCounter_ControlRegRemoved) */
  42:Generated_Source\PSoC5/SpeakerCounter.c ****         
  43:Generated_Source\PSoC5/SpeakerCounter.c ****         #if(!SpeakerCounter_UsingFixedFunction) 
  44:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/SpeakerCounter.c ****             uint8 SpeakerCounter_interruptState;
  46:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!SpeakerCounter_UsingFixedFunction) */
  47:Generated_Source\PSoC5/SpeakerCounter.c ****         
  48:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (SpeakerCounter_UsingFixedFunction)
  49:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_CONTROL &= SpeakerCounter_CTRL_ENABLE;
  51:Generated_Source\PSoC5/SpeakerCounter.c ****             
  52:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/SpeakerCounter.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/SpeakerCounter.c ****                 SpeakerCounter_CONTROL2 &= ((uint8)(~SpeakerCounter_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/SpeakerCounter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/SpeakerCounter.c ****                 SpeakerCounter_CONTROL3 &= ((uint8)(~SpeakerCounter_CTRL_MODE_MASK));              
  58:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/SpeakerCounter.c ****             #if (SpeakerCounter_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/SpeakerCounter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/SpeakerCounter.c ****                 SpeakerCounter_CONTROL |= SpeakerCounter_ONESHOT;
  63:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* (SpeakerCounter_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/SpeakerCounter.c ****             
  65:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_CONTROL2 |= SpeakerCounter_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/SpeakerCounter.c ****             
  68:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 &= ((uint8)(~SpeakerCounter_RT1_MASK));
  70:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 |= SpeakerCounter_SYNC;     
  71:Generated_Source\PSoC5/SpeakerCounter.c ****                     
  72:Generated_Source\PSoC5/SpeakerCounter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 &= ((uint8)(~SpeakerCounter_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 |= SpeakerCounter_SYNCDSI_EN;
  75:Generated_Source\PSoC5/SpeakerCounter.c **** 
  76:Generated_Source\PSoC5/SpeakerCounter.c ****         #else
  77:Generated_Source\PSoC5/SpeakerCounter.c ****             #if(!SpeakerCounter_ControlRegRemoved)
  78:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/SpeakerCounter.c ****             ctrl = SpeakerCounter_CONTROL & ((uint8)(~SpeakerCounter_CTRL_CMPMODE_MASK));
  80:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_CONTROL = ctrl | SpeakerCounter_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/SpeakerCounter.c ****             
  82:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/SpeakerCounter.c ****             ctrl = SpeakerCounter_CONTROL & ((uint8)(~SpeakerCounter_CTRL_CAPMODE_MASK));
  84:Generated_Source\PSoC5/SpeakerCounter.c ****             
  85:Generated_Source\PSoC5/SpeakerCounter.c ****             #if( 0 != SpeakerCounter_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/SpeakerCounter.c ****                 SpeakerCounter_CONTROL = ctrl | SpeakerCounter_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/SpeakerCounter.c ****             #else
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 3


  88:Generated_Source\PSoC5/SpeakerCounter.c ****                 SpeakerCounter_CONTROL = ctrl;
  89:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* 0 != SpeakerCounter_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/SpeakerCounter.c ****             
  91:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* (!SpeakerCounter_ControlRegRemoved) */
  92:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (SpeakerCounter_UsingFixedFunction) */
  93:Generated_Source\PSoC5/SpeakerCounter.c ****         
  94:Generated_Source\PSoC5/SpeakerCounter.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!SpeakerCounter_UsingFixedFunction)
  96:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_ClearFIFO();
  97:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!SpeakerCounter_UsingFixedFunction) */
  98:Generated_Source\PSoC5/SpeakerCounter.c ****         
  99:Generated_Source\PSoC5/SpeakerCounter.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_WritePeriod(SpeakerCounter_INIT_PERIOD_VALUE);
 101:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_WriteCounter(SpeakerCounter_INIT_COUNTER_VALUE);
 103:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_SetInterruptMode(SpeakerCounter_INIT_INTERRUPTS_MASK);
 105:Generated_Source\PSoC5/SpeakerCounter.c ****         
 106:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!SpeakerCounter_UsingFixedFunction)
 107:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/SpeakerCounter.c ****             (void)SpeakerCounter_ReadStatusRegister();
 109:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_WriteCompare(SpeakerCounter_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/SpeakerCounter.c ****             
 113:Generated_Source\PSoC5/SpeakerCounter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/SpeakerCounter.c ****             
 117:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_STATUS_AUX_CTRL |= SpeakerCounter_STATUS_ACTL_INT_EN_MASK;
 118:Generated_Source\PSoC5/SpeakerCounter.c ****             
 119:Generated_Source\PSoC5/SpeakerCounter.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/SpeakerCounter.c ****             CyExitCriticalSection(SpeakerCounter_interruptState);
 121:Generated_Source\PSoC5/SpeakerCounter.c ****             
 122:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!SpeakerCounter_UsingFixedFunction) */
 123:Generated_Source\PSoC5/SpeakerCounter.c **** }
 124:Generated_Source\PSoC5/SpeakerCounter.c **** 
 125:Generated_Source\PSoC5/SpeakerCounter.c **** 
 126:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_Enable
 128:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 129:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 130:Generated_Source\PSoC5/SpeakerCounter.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/SpeakerCounter.c **** * 
 132:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 133:Generated_Source\PSoC5/SpeakerCounter.c **** *  void  
 134:Generated_Source\PSoC5/SpeakerCounter.c **** *
 135:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 136:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 137:Generated_Source\PSoC5/SpeakerCounter.c **** *
 138:Generated_Source\PSoC5/SpeakerCounter.c **** * Side Effects: 
 139:Generated_Source\PSoC5/SpeakerCounter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/SpeakerCounter.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/SpeakerCounter.c **** *
 142:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_Enable(void) 
 144:Generated_Source\PSoC5/SpeakerCounter.c **** {
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 145:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/SpeakerCounter.c ****     #if (SpeakerCounter_UsingFixedFunction)
 147:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_ENABLE |= SpeakerCounter_BLOCK_EN_MASK;
  33              		.loc 1 147 0
  34 0000 084A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00403 		orr	r3, r3, #4
  37 0008 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_STBY_ENABLE |= SpeakerCounter_BLOCK_STBY_EN_MASK;
  38              		.loc 1 148 0
  39 000a 1032     		adds	r2, r2, #16
  40 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000e 43F00403 		orr	r3, r3, #4
  42 0012 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/SpeakerCounter.c ****         
 151:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/SpeakerCounter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/SpeakerCounter.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(!SpeakerCounter_ControlRegRemoved || SpeakerCounter_UsingFixedFunction)
 155:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_CONTROL |= SpeakerCounter_CTRL_ENABLE;                
  43              		.loc 1 155 0
  44 0014 02F66532 		addw	r2, r2, #2917
  45 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  46 001a 43F00103 		orr	r3, r3, #1
  47 001e 1370     		strb	r3, [r2]
  48 0020 7047     		bx	lr
  49              	.L3:
  50 0022 00BF     		.align	2
  51              	.L2:
  52 0024 A3430040 		.word	1073759139
  53              		.cfi_endproc
  54              	.LFE1:
  55              		.size	SpeakerCounter_Enable, .-SpeakerCounter_Enable
  56              		.section	.text.SpeakerCounter_Stop,"ax",%progbits
  57              		.align	2
  58              		.global	SpeakerCounter_Stop
  59              		.thumb
  60              		.thumb_func
  61              		.type	SpeakerCounter_Stop, %function
  62              	SpeakerCounter_Stop:
  63              	.LFB3:
 156:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (!SpeakerCounter_ControlRegRemoved || SpeakerCounter_UsingFixedFunction) */
 157:Generated_Source\PSoC5/SpeakerCounter.c ****     
 158:Generated_Source\PSoC5/SpeakerCounter.c **** }
 159:Generated_Source\PSoC5/SpeakerCounter.c **** 
 160:Generated_Source\PSoC5/SpeakerCounter.c **** 
 161:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_Start
 163:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 164:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 165:Generated_Source\PSoC5/SpeakerCounter.c **** *  Enables the counter for operation 
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 5


 166:Generated_Source\PSoC5/SpeakerCounter.c **** *
 167:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 168:Generated_Source\PSoC5/SpeakerCounter.c **** *  void  
 169:Generated_Source\PSoC5/SpeakerCounter.c **** *
 170:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 171:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 172:Generated_Source\PSoC5/SpeakerCounter.c **** *
 173:Generated_Source\PSoC5/SpeakerCounter.c **** * Global variables:
 174:Generated_Source\PSoC5/SpeakerCounter.c **** *  SpeakerCounter_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/SpeakerCounter.c **** *   first time. Is used to ensure that initialization happens only once.
 176:Generated_Source\PSoC5/SpeakerCounter.c **** *
 177:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_Start(void) 
 179:Generated_Source\PSoC5/SpeakerCounter.c **** {
 180:Generated_Source\PSoC5/SpeakerCounter.c ****     if(SpeakerCounter_initVar == 0u)
 181:Generated_Source\PSoC5/SpeakerCounter.c ****     {
 182:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_Init();
 183:Generated_Source\PSoC5/SpeakerCounter.c ****         
 184:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_initVar = 1u; /* Clear this bit for Initialization */        
 185:Generated_Source\PSoC5/SpeakerCounter.c ****     }
 186:Generated_Source\PSoC5/SpeakerCounter.c ****     
 187:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/SpeakerCounter.c ****     SpeakerCounter_Enable();        
 189:Generated_Source\PSoC5/SpeakerCounter.c **** }
 190:Generated_Source\PSoC5/SpeakerCounter.c **** 
 191:Generated_Source\PSoC5/SpeakerCounter.c **** 
 192:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_Stop
 194:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 195:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 196:Generated_Source\PSoC5/SpeakerCounter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/SpeakerCounter.c **** *
 198:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 199:Generated_Source\PSoC5/SpeakerCounter.c **** *  void  
 200:Generated_Source\PSoC5/SpeakerCounter.c **** *
 201:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 202:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 203:Generated_Source\PSoC5/SpeakerCounter.c **** *
 204:Generated_Source\PSoC5/SpeakerCounter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/SpeakerCounter.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/SpeakerCounter.c **** *
 207:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_Stop(void) 
 209:Generated_Source\PSoC5/SpeakerCounter.c **** {
  64              		.loc 1 209 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 210:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(!SpeakerCounter_ControlRegRemoved || SpeakerCounter_UsingFixedFunction)
 212:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_CONTROL &= ((uint8)(~SpeakerCounter_CTRL_ENABLE));        
  69              		.loc 1 212 0
  70 0000 084A     		ldr	r2, .L5
  71 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  72 0004 03F0FE03 		and	r3, r3, #254
  73 0008 1370     		strb	r3, [r2]
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 6


 213:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (!SpeakerCounter_ControlRegRemoved || SpeakerCounter_UsingFixedFunction) */
 214:Generated_Source\PSoC5/SpeakerCounter.c ****     
 215:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/SpeakerCounter.c ****     #if (SpeakerCounter_UsingFixedFunction)
 217:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_ENABLE &= ((uint8)(~SpeakerCounter_BLOCK_EN_MASK));
  74              		.loc 1 217 0
  75 000a A2F67532 		subw	r2, r2, #2933
  76 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  77 0010 03F0FB03 		and	r3, r3, #251
  78 0014 1370     		strb	r3, [r2]
 218:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_STBY_ENABLE &= ((uint8)(~SpeakerCounter_BLOCK_STBY_EN_MASK));
  79              		.loc 1 218 0
  80 0016 1032     		adds	r2, r2, #16
  81 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 001a 03F0FB03 		and	r3, r3, #251
  83 001e 1370     		strb	r3, [r2]
  84 0020 7047     		bx	lr
  85              	.L6:
  86 0022 00BF     		.align	2
  87              	.L5:
  88 0024 184F0040 		.word	1073762072
  89              		.cfi_endproc
  90              	.LFE3:
  91              		.size	SpeakerCounter_Stop, .-SpeakerCounter_Stop
  92              		.section	.text.SpeakerCounter_SetInterruptMode,"ax",%progbits
  93              		.align	2
  94              		.global	SpeakerCounter_SetInterruptMode
  95              		.thumb
  96              		.thumb_func
  97              		.type	SpeakerCounter_SetInterruptMode, %function
  98              	SpeakerCounter_SetInterruptMode:
  99              	.LFB4:
 219:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 220:Generated_Source\PSoC5/SpeakerCounter.c **** }
 221:Generated_Source\PSoC5/SpeakerCounter.c **** 
 222:Generated_Source\PSoC5/SpeakerCounter.c **** 
 223:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_SetInterruptMode
 225:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 226:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 227:Generated_Source\PSoC5/SpeakerCounter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/SpeakerCounter.c **** *
 229:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 230:Generated_Source\PSoC5/SpeakerCounter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/SpeakerCounter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/SpeakerCounter.c **** *
 233:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 234:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 235:Generated_Source\PSoC5/SpeakerCounter.c **** *
 236:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/SpeakerCounter.c **** {
 100              		.loc 1 238 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 7


 105              	.LVL0:
 239:Generated_Source\PSoC5/SpeakerCounter.c ****     SpeakerCounter_STATUS_MASK = interruptsMask;
 106              		.loc 1 239 0
 107 0000 014B     		ldr	r3, .L8
 108 0002 1870     		strb	r0, [r3]
 109 0004 7047     		bx	lr
 110              	.L9:
 111 0006 00BF     		.align	2
 112              	.L8:
 113 0008 1B4F0040 		.word	1073762075
 114              		.cfi_endproc
 115              	.LFE4:
 116              		.size	SpeakerCounter_SetInterruptMode, .-SpeakerCounter_SetInterruptMode
 117              		.section	.text.SpeakerCounter_ReadStatusRegister,"ax",%progbits
 118              		.align	2
 119              		.global	SpeakerCounter_ReadStatusRegister
 120              		.thumb
 121              		.thumb_func
 122              		.type	SpeakerCounter_ReadStatusRegister, %function
 123              	SpeakerCounter_ReadStatusRegister:
 124              	.LFB5:
 240:Generated_Source\PSoC5/SpeakerCounter.c **** }
 241:Generated_Source\PSoC5/SpeakerCounter.c **** 
 242:Generated_Source\PSoC5/SpeakerCounter.c **** 
 243:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_ReadStatusRegister
 245:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 246:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 247:Generated_Source\PSoC5/SpeakerCounter.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/SpeakerCounter.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/SpeakerCounter.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/SpeakerCounter.c **** *
 251:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 252:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 253:Generated_Source\PSoC5/SpeakerCounter.c **** *
 254:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 255:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/SpeakerCounter.c **** *
 257:Generated_Source\PSoC5/SpeakerCounter.c **** * Side Effects:
 258:Generated_Source\PSoC5/SpeakerCounter.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/SpeakerCounter.c **** *
 260:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/SpeakerCounter.c **** uint8   SpeakerCounter_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/SpeakerCounter.c **** {
 125              		.loc 1 262 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 263:Generated_Source\PSoC5/SpeakerCounter.c ****     return SpeakerCounter_STATUS;
 130              		.loc 1 263 0
 131 0000 014B     		ldr	r3, .L11
 132 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:Generated_Source\PSoC5/SpeakerCounter.c **** }
 133              		.loc 1 264 0
 134 0004 7047     		bx	lr
 135              	.L12:
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 8


 136 0006 00BF     		.align	2
 137              	.L11:
 138 0008 1B4F0040 		.word	1073762075
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	SpeakerCounter_ReadStatusRegister, .-SpeakerCounter_ReadStatusRegister
 142              		.section	.text.SpeakerCounter_ReadControlRegister,"ax",%progbits
 143              		.align	2
 144              		.global	SpeakerCounter_ReadControlRegister
 145              		.thumb
 146              		.thumb_func
 147              		.type	SpeakerCounter_ReadControlRegister, %function
 148              	SpeakerCounter_ReadControlRegister:
 149              	.LFB6:
 265:Generated_Source\PSoC5/SpeakerCounter.c **** 
 266:Generated_Source\PSoC5/SpeakerCounter.c **** 
 267:Generated_Source\PSoC5/SpeakerCounter.c **** #if(!SpeakerCounter_ControlRegRemoved)
 268:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_ReadControlRegister
 270:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 271:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 272:Generated_Source\PSoC5/SpeakerCounter.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/SpeakerCounter.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/SpeakerCounter.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/SpeakerCounter.c **** *
 276:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 277:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 278:Generated_Source\PSoC5/SpeakerCounter.c **** *
 279:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 280:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/SpeakerCounter.c **** *
 282:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/SpeakerCounter.c **** uint8   SpeakerCounter_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/SpeakerCounter.c **** {
 150              		.loc 1 284 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 285:Generated_Source\PSoC5/SpeakerCounter.c ****     return SpeakerCounter_CONTROL;
 155              		.loc 1 285 0
 156 0000 014B     		ldr	r3, .L14
 157 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:Generated_Source\PSoC5/SpeakerCounter.c **** }
 158              		.loc 1 286 0
 159 0004 7047     		bx	lr
 160              	.L15:
 161 0006 00BF     		.align	2
 162              	.L14:
 163 0008 184F0040 		.word	1073762072
 164              		.cfi_endproc
 165              	.LFE6:
 166              		.size	SpeakerCounter_ReadControlRegister, .-SpeakerCounter_ReadControlRegister
 167              		.section	.text.SpeakerCounter_WriteControlRegister,"ax",%progbits
 168              		.align	2
 169              		.global	SpeakerCounter_WriteControlRegister
 170              		.thumb
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 9


 171              		.thumb_func
 172              		.type	SpeakerCounter_WriteControlRegister, %function
 173              	SpeakerCounter_WriteControlRegister:
 174              	.LFB7:
 287:Generated_Source\PSoC5/SpeakerCounter.c **** 
 288:Generated_Source\PSoC5/SpeakerCounter.c **** 
 289:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_WriteControlRegister
 291:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 292:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 293:Generated_Source\PSoC5/SpeakerCounter.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/SpeakerCounter.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/SpeakerCounter.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/SpeakerCounter.c **** *
 297:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 298:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 299:Generated_Source\PSoC5/SpeakerCounter.c **** *
 300:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 301:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/SpeakerCounter.c **** *
 303:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/SpeakerCounter.c **** void    SpeakerCounter_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/SpeakerCounter.c **** {
 175              		.loc 1 305 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL1:
 306:Generated_Source\PSoC5/SpeakerCounter.c ****     SpeakerCounter_CONTROL = control;
 181              		.loc 1 306 0
 182 0000 014B     		ldr	r3, .L17
 183 0002 1870     		strb	r0, [r3]
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 00BF     		.align	2
 187              	.L17:
 188 0008 184F0040 		.word	1073762072
 189              		.cfi_endproc
 190              	.LFE7:
 191              		.size	SpeakerCounter_WriteControlRegister, .-SpeakerCounter_WriteControlRegister
 192              		.section	.text.SpeakerCounter_WriteCounter,"ax",%progbits
 193              		.align	2
 194              		.global	SpeakerCounter_WriteCounter
 195              		.thumb
 196              		.thumb_func
 197              		.type	SpeakerCounter_WriteCounter, %function
 198              	SpeakerCounter_WriteCounter:
 199              	.LFB8:
 307:Generated_Source\PSoC5/SpeakerCounter.c **** }
 308:Generated_Source\PSoC5/SpeakerCounter.c **** 
 309:Generated_Source\PSoC5/SpeakerCounter.c **** #endif  /* (!SpeakerCounter_ControlRegRemoved) */
 310:Generated_Source\PSoC5/SpeakerCounter.c **** 
 311:Generated_Source\PSoC5/SpeakerCounter.c **** 
 312:Generated_Source\PSoC5/SpeakerCounter.c **** #if (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_WriteCounter
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 10


 315:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 316:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 317:Generated_Source\PSoC5/SpeakerCounter.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/SpeakerCounter.c **** *
 319:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 320:Generated_Source\PSoC5/SpeakerCounter.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/SpeakerCounter.c **** *
 322:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 323:Generated_Source\PSoC5/SpeakerCounter.c **** *  void 
 324:Generated_Source\PSoC5/SpeakerCounter.c **** *
 325:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_WriteCounter(uint16 counter) \
 327:Generated_Source\PSoC5/SpeakerCounter.c ****                                    
 328:Generated_Source\PSoC5/SpeakerCounter.c **** {
 200              		.loc 1 328 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              	.LVL2:
 205 0000 10B5     		push	{r4, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
 209 0002 0446     		mov	r4, r0
 329:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 330:Generated_Source\PSoC5/SpeakerCounter.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/SpeakerCounter.c ****         CYASSERT (0u == (SpeakerCounter_GLOBAL_ENABLE & SpeakerCounter_BLOCK_EN_MASK));
 210              		.loc 1 331 0
 211 0004 094B     		ldr	r3, .L22
 212 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213 0008 13F0040F 		tst	r3, #4
 214 000c 02D0     		beq	.L20
 215              		.loc 1 331 0 is_stmt 0 discriminator 1
 216 000e 0020     		movs	r0, #0
 217              	.LVL3:
 218 0010 FFF7FEFF 		bl	CyHalt
 219              	.LVL4:
 220              	.L20:
 332:Generated_Source\PSoC5/SpeakerCounter.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_ENABLE |= SpeakerCounter_BLOCK_EN_MASK;
 221              		.loc 1 333 0 is_stmt 1
 222 0014 054B     		ldr	r3, .L22
 223 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 224 0018 42F00402 		orr	r2, r2, #4
 225 001c 1A70     		strb	r2, [r3]
 334:Generated_Source\PSoC5/SpeakerCounter.c ****         CY_SET_REG16(SpeakerCounter_COUNTER_LSB_PTR, (uint16)counter);
 226              		.loc 1 334 0
 227 001e 044A     		ldr	r2, .L22+4
 228 0020 1480     		strh	r4, [r2]	@ movhi
 335:Generated_Source\PSoC5/SpeakerCounter.c ****         SpeakerCounter_GLOBAL_ENABLE &= ((uint8)(~SpeakerCounter_BLOCK_EN_MASK));
 229              		.loc 1 335 0
 230 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 231 0024 02F0FB02 		and	r2, r2, #251
 232 0028 1A70     		strb	r2, [r3]
 233 002a 10BD     		pop	{r4, pc}
 234              	.L23:
 235              		.align	2
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 11


 236              	.L22:
 237 002c A3430040 		.word	1073759139
 238 0030 1E4F0040 		.word	1073762078
 239              		.cfi_endproc
 240              	.LFE8:
 241              		.size	SpeakerCounter_WriteCounter, .-SpeakerCounter_WriteCounter
 242              		.section	.text.SpeakerCounter_ReadCounter,"ax",%progbits
 243              		.align	2
 244              		.global	SpeakerCounter_ReadCounter
 245              		.thumb
 246              		.thumb_func
 247              		.type	SpeakerCounter_ReadCounter, %function
 248              	SpeakerCounter_ReadCounter:
 249              	.LFB9:
 336:Generated_Source\PSoC5/SpeakerCounter.c ****     #else
 337:Generated_Source\PSoC5/SpeakerCounter.c ****         CY_SET_REG16(SpeakerCounter_COUNTER_LSB_PTR, counter);
 338:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 339:Generated_Source\PSoC5/SpeakerCounter.c **** }
 340:Generated_Source\PSoC5/SpeakerCounter.c **** #endif /* (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/SpeakerCounter.c **** 
 342:Generated_Source\PSoC5/SpeakerCounter.c **** 
 343:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_ReadCounter
 345:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 346:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 347:Generated_Source\PSoC5/SpeakerCounter.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/SpeakerCounter.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/SpeakerCounter.c **** *
 350:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 351:Generated_Source\PSoC5/SpeakerCounter.c **** *  void:  
 352:Generated_Source\PSoC5/SpeakerCounter.c **** *
 353:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 354:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint16) The present value of the counter.
 355:Generated_Source\PSoC5/SpeakerCounter.c **** *
 356:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/SpeakerCounter.c **** uint16 SpeakerCounter_ReadCounter(void) 
 358:Generated_Source\PSoC5/SpeakerCounter.c **** {
 250              		.loc 1 358 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 359:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/SpeakerCounter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 363:Generated_Source\PSoC5/SpeakerCounter.c **** 		(void)CY_GET_REG16(SpeakerCounter_COUNTER_LSB_PTR);
 255              		.loc 1 363 0
 256 0000 024B     		ldr	r3, .L25
 257 0002 1B88     		ldrh	r3, [r3]
 364:Generated_Source\PSoC5/SpeakerCounter.c **** 	#else
 365:Generated_Source\PSoC5/SpeakerCounter.c **** 		(void)CY_GET_REG8(SpeakerCounter_COUNTER_LSB_PTR_8BIT);
 366:Generated_Source\PSoC5/SpeakerCounter.c **** 	#endif/* (SpeakerCounter_UsingFixedFunction) */
 367:Generated_Source\PSoC5/SpeakerCounter.c ****     
 368:Generated_Source\PSoC5/SpeakerCounter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 370:Generated_Source\PSoC5/SpeakerCounter.c ****         return ((uint16)CY_GET_REG16(SpeakerCounter_STATICCOUNT_LSB_PTR));
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 12


 258              		.loc 1 370 0
 259 0004 024B     		ldr	r3, .L25+4
 260 0006 1888     		ldrh	r0, [r3]
 371:Generated_Source\PSoC5/SpeakerCounter.c ****     #else
 372:Generated_Source\PSoC5/SpeakerCounter.c ****         return (CY_GET_REG16(SpeakerCounter_STATICCOUNT_LSB_PTR));
 373:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 374:Generated_Source\PSoC5/SpeakerCounter.c **** }
 261              		.loc 1 374 0
 262 0008 80B2     		uxth	r0, r0
 263 000a 7047     		bx	lr
 264              	.L26:
 265              		.align	2
 266              	.L25:
 267 000c 1E4F0040 		.word	1073762078
 268 0010 204F0040 		.word	1073762080
 269              		.cfi_endproc
 270              	.LFE9:
 271              		.size	SpeakerCounter_ReadCounter, .-SpeakerCounter_ReadCounter
 272              		.section	.text.SpeakerCounter_ReadCapture,"ax",%progbits
 273              		.align	2
 274              		.global	SpeakerCounter_ReadCapture
 275              		.thumb
 276              		.thumb_func
 277              		.type	SpeakerCounter_ReadCapture, %function
 278              	SpeakerCounter_ReadCapture:
 279              	.LFB10:
 375:Generated_Source\PSoC5/SpeakerCounter.c **** 
 376:Generated_Source\PSoC5/SpeakerCounter.c **** 
 377:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_ReadCapture
 379:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 380:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 381:Generated_Source\PSoC5/SpeakerCounter.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/SpeakerCounter.c **** *
 383:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 384:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 385:Generated_Source\PSoC5/SpeakerCounter.c **** *
 386:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 387:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint16) Present Capture value.
 388:Generated_Source\PSoC5/SpeakerCounter.c **** *
 389:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/SpeakerCounter.c **** uint16 SpeakerCounter_ReadCapture(void) 
 391:Generated_Source\PSoC5/SpeakerCounter.c **** {
 280              		.loc 1 391 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 392:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 393:Generated_Source\PSoC5/SpeakerCounter.c ****         return ((uint16)CY_GET_REG16(SpeakerCounter_STATICCOUNT_LSB_PTR));
 285              		.loc 1 393 0
 286 0000 014B     		ldr	r3, .L28
 287 0002 1888     		ldrh	r0, [r3]
 394:Generated_Source\PSoC5/SpeakerCounter.c ****     #else
 395:Generated_Source\PSoC5/SpeakerCounter.c ****         return (CY_GET_REG16(SpeakerCounter_STATICCOUNT_LSB_PTR));
 396:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 397:Generated_Source\PSoC5/SpeakerCounter.c **** }
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 13


 288              		.loc 1 397 0
 289 0004 80B2     		uxth	r0, r0
 290 0006 7047     		bx	lr
 291              	.L29:
 292              		.align	2
 293              	.L28:
 294 0008 204F0040 		.word	1073762080
 295              		.cfi_endproc
 296              	.LFE10:
 297              		.size	SpeakerCounter_ReadCapture, .-SpeakerCounter_ReadCapture
 298              		.section	.text.SpeakerCounter_WritePeriod,"ax",%progbits
 299              		.align	2
 300              		.global	SpeakerCounter_WritePeriod
 301              		.thumb
 302              		.thumb_func
 303              		.type	SpeakerCounter_WritePeriod, %function
 304              	SpeakerCounter_WritePeriod:
 305              	.LFB11:
 398:Generated_Source\PSoC5/SpeakerCounter.c **** 
 399:Generated_Source\PSoC5/SpeakerCounter.c **** 
 400:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_WritePeriod
 402:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 403:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 404:Generated_Source\PSoC5/SpeakerCounter.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/SpeakerCounter.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/SpeakerCounter.c **** *
 407:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 408:Generated_Source\PSoC5/SpeakerCounter.c **** *  period: (uint16) A value of 0 will result in
 409:Generated_Source\PSoC5/SpeakerCounter.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/SpeakerCounter.c **** *
 411:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 412:Generated_Source\PSoC5/SpeakerCounter.c **** *  void
 413:Generated_Source\PSoC5/SpeakerCounter.c **** *
 414:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/SpeakerCounter.c **** void SpeakerCounter_WritePeriod(uint16 period) 
 416:Generated_Source\PSoC5/SpeakerCounter.c **** {
 306              		.loc 1 416 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311              	.LVL5:
 417:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 418:Generated_Source\PSoC5/SpeakerCounter.c ****         CY_SET_REG16(SpeakerCounter_PERIOD_LSB_PTR,(uint16)period);
 312              		.loc 1 418 0
 313 0000 014B     		ldr	r3, .L31
 314 0002 1880     		strh	r0, [r3]	@ movhi
 315 0004 7047     		bx	lr
 316              	.L32:
 317 0006 00BF     		.align	2
 318              	.L31:
 319 0008 1C4F0040 		.word	1073762076
 320              		.cfi_endproc
 321              	.LFE11:
 322              		.size	SpeakerCounter_WritePeriod, .-SpeakerCounter_WritePeriod
 323              		.section	.text.SpeakerCounter_Init,"ax",%progbits
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 14


 324              		.align	2
 325              		.global	SpeakerCounter_Init
 326              		.thumb
 327              		.thumb_func
 328              		.type	SpeakerCounter_Init, %function
 329              	SpeakerCounter_Init:
 330              	.LFB0:
  38:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!SpeakerCounter_UsingFixedFunction && !SpeakerCounter_ControlRegRemoved)
 331              		.loc 1 38 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 08B5     		push	{r3, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
  50:Generated_Source\PSoC5/SpeakerCounter.c ****             
 339              		.loc 1 50 0
 340 0002 154A     		ldr	r2, .L35
 341 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 0006 03F00103 		and	r3, r3, #1
 343 000a 1370     		strb	r3, [r2]
  57:Generated_Source\PSoC5/SpeakerCounter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 344              		.loc 1 57 0
 345 000c 0232     		adds	r2, r2, #2
 346 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 347 0010 03F0FC03 		and	r3, r3, #252
 348 0014 1370     		strb	r3, [r2]
  66:Generated_Source\PSoC5/SpeakerCounter.c ****             
 349              		.loc 1 66 0
 350 0016 013A     		subs	r2, r2, #1
 351 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 352 001a 43F00103 		orr	r3, r3, #1
 353 001e 1370     		strb	r3, [r2]
  69:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 |= SpeakerCounter_SYNC;     
 354              		.loc 1 69 0
 355 0020 0E4B     		ldr	r3, .L35+4
 356 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 357 0024 02F0CF02 		and	r2, r2, #207
 358 0028 1A70     		strb	r2, [r3]
  70:Generated_Source\PSoC5/SpeakerCounter.c ****                     
 359              		.loc 1 70 0
 360 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 361 002c 42F03002 		orr	r2, r2, #48
 362 0030 1A70     		strb	r2, [r3]
  73:Generated_Source\PSoC5/SpeakerCounter.c ****             SpeakerCounter_RT1 |= SpeakerCounter_SYNCDSI_EN;
 363              		.loc 1 73 0
 364 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 365 0034 02F0F002 		and	r2, r2, #240
 366 0038 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC5/SpeakerCounter.c **** 
 367              		.loc 1 74 0
 368 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 369 003c 42F00F02 		orr	r2, r2, #15
 370 0040 1A70     		strb	r2, [r3]
 100:Generated_Source\PSoC5/SpeakerCounter.c ****         #if (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A)))
 371              		.loc 1 100 0
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 15


 372 0042 0120     		movs	r0, #1
 373 0044 FFF7FEFF 		bl	SpeakerCounter_WritePeriod
 374              	.LVL6:
 102:Generated_Source\PSoC5/SpeakerCounter.c ****         #endif /* (!(SpeakerCounter_UsingFixedFunction && (CY_PSOC5A))) */
 375              		.loc 1 102 0
 376 0048 0020     		movs	r0, #0
 377 004a FFF7FEFF 		bl	SpeakerCounter_WriteCounter
 378              	.LVL7:
 104:Generated_Source\PSoC5/SpeakerCounter.c ****         
 379              		.loc 1 104 0
 380 004e 0020     		movs	r0, #0
 381 0050 FFF7FEFF 		bl	SpeakerCounter_SetInterruptMode
 382              	.LVL8:
 383 0054 08BD     		pop	{r3, pc}
 384              	.L36:
 385 0056 00BF     		.align	2
 386              	.L35:
 387 0058 184F0040 		.word	1073762072
 388 005c 234F0040 		.word	1073762083
 389              		.cfi_endproc
 390              	.LFE0:
 391              		.size	SpeakerCounter_Init, .-SpeakerCounter_Init
 392              		.section	.text.SpeakerCounter_Start,"ax",%progbits
 393              		.align	2
 394              		.global	SpeakerCounter_Start
 395              		.thumb
 396              		.thumb_func
 397              		.type	SpeakerCounter_Start, %function
 398              	SpeakerCounter_Start:
 399              	.LFB2:
 179:Generated_Source\PSoC5/SpeakerCounter.c ****     if(SpeakerCounter_initVar == 0u)
 400              		.loc 1 179 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 180:Generated_Source\PSoC5/SpeakerCounter.c ****     {
 408              		.loc 1 180 0
 409 0002 054B     		ldr	r3, .L40
 410 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0006 23B9     		cbnz	r3, .L38
 182:Generated_Source\PSoC5/SpeakerCounter.c ****         
 412              		.loc 1 182 0
 413 0008 FFF7FEFF 		bl	SpeakerCounter_Init
 414              	.LVL9:
 184:Generated_Source\PSoC5/SpeakerCounter.c ****     }
 415              		.loc 1 184 0
 416 000c 0122     		movs	r2, #1
 417 000e 024B     		ldr	r3, .L40
 418 0010 1A70     		strb	r2, [r3]
 419              	.L38:
 188:Generated_Source\PSoC5/SpeakerCounter.c **** }
 420              		.loc 1 188 0
 421 0012 FFF7FEFF 		bl	SpeakerCounter_Enable
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 16


 422              	.LVL10:
 423 0016 08BD     		pop	{r3, pc}
 424              	.L41:
 425              		.align	2
 426              	.L40:
 427 0018 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE2:
 430              		.size	SpeakerCounter_Start, .-SpeakerCounter_Start
 431              		.section	.text.SpeakerCounter_ReadPeriod,"ax",%progbits
 432              		.align	2
 433              		.global	SpeakerCounter_ReadPeriod
 434              		.thumb
 435              		.thumb_func
 436              		.type	SpeakerCounter_ReadPeriod, %function
 437              	SpeakerCounter_ReadPeriod:
 438              	.LFB12:
 419:Generated_Source\PSoC5/SpeakerCounter.c ****     #else
 420:Generated_Source\PSoC5/SpeakerCounter.c ****         CY_SET_REG16(SpeakerCounter_PERIOD_LSB_PTR, period);
 421:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 422:Generated_Source\PSoC5/SpeakerCounter.c **** }
 423:Generated_Source\PSoC5/SpeakerCounter.c **** 
 424:Generated_Source\PSoC5/SpeakerCounter.c **** 
 425:Generated_Source\PSoC5/SpeakerCounter.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/SpeakerCounter.c **** * Function Name: SpeakerCounter_ReadPeriod
 427:Generated_Source\PSoC5/SpeakerCounter.c **** ********************************************************************************
 428:Generated_Source\PSoC5/SpeakerCounter.c **** * Summary:
 429:Generated_Source\PSoC5/SpeakerCounter.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/SpeakerCounter.c **** *
 431:Generated_Source\PSoC5/SpeakerCounter.c **** * Parameters:  
 432:Generated_Source\PSoC5/SpeakerCounter.c **** *  void:  
 433:Generated_Source\PSoC5/SpeakerCounter.c **** *
 434:Generated_Source\PSoC5/SpeakerCounter.c **** * Return: 
 435:Generated_Source\PSoC5/SpeakerCounter.c **** *  (uint16) Present period value.
 436:Generated_Source\PSoC5/SpeakerCounter.c **** *
 437:Generated_Source\PSoC5/SpeakerCounter.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/SpeakerCounter.c **** uint16 SpeakerCounter_ReadPeriod(void) 
 439:Generated_Source\PSoC5/SpeakerCounter.c **** {
 439              		.loc 1 439 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 440:Generated_Source\PSoC5/SpeakerCounter.c ****     #if(SpeakerCounter_UsingFixedFunction)
 441:Generated_Source\PSoC5/SpeakerCounter.c ****         return ((uint16)CY_GET_REG16(SpeakerCounter_PERIOD_LSB_PTR));
 444              		.loc 1 441 0
 445 0000 014B     		ldr	r3, .L43
 446 0002 1888     		ldrh	r0, [r3]
 442:Generated_Source\PSoC5/SpeakerCounter.c ****     #else
 443:Generated_Source\PSoC5/SpeakerCounter.c ****         return (CY_GET_REG16(SpeakerCounter_PERIOD_LSB_PTR));
 444:Generated_Source\PSoC5/SpeakerCounter.c ****     #endif /* (SpeakerCounter_UsingFixedFunction) */
 445:Generated_Source\PSoC5/SpeakerCounter.c **** }
 447              		.loc 1 445 0
 448 0004 80B2     		uxth	r0, r0
 449 0006 7047     		bx	lr
 450              	.L44:
 451              		.align	2
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 17


 452              	.L43:
 453 0008 1C4F0040 		.word	1073762076
 454              		.cfi_endproc
 455              	.LFE12:
 456              		.size	SpeakerCounter_ReadPeriod, .-SpeakerCounter_ReadPeriod
 457              		.global	SpeakerCounter_initVar
 458              		.bss
 459              		.set	.LANCHOR0,. + 0
 460              		.type	SpeakerCounter_initVar, %object
 461              		.size	SpeakerCounter_initVar, 1
 462              	SpeakerCounter_initVar:
 463 0000 00       		.space	1
 464              		.text
 465              	.Letext0:
 466              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 467              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 468              		.section	.debug_info,"",%progbits
 469              	.Ldebug_info0:
 470 0000 87020000 		.4byte	0x287
 471 0004 0400     		.2byte	0x4
 472 0006 00000000 		.4byte	.Ldebug_abbrev0
 473 000a 04       		.byte	0x4
 474 000b 01       		.uleb128 0x1
 475 000c 51020000 		.4byte	.LASF35
 476 0010 0C       		.byte	0xc
 477 0011 B1010000 		.4byte	.LASF36
 478 0015 48010000 		.4byte	.LASF37
 479 0019 00000000 		.4byte	.Ldebug_ranges0+0
 480 001d 00000000 		.4byte	0
 481 0021 00000000 		.4byte	.Ldebug_line0
 482 0025 02       		.uleb128 0x2
 483 0026 01       		.byte	0x1
 484 0027 06       		.byte	0x6
 485 0028 61030000 		.4byte	.LASF0
 486 002c 02       		.uleb128 0x2
 487 002d 01       		.byte	0x1
 488 002e 08       		.byte	0x8
 489 002f B2000000 		.4byte	.LASF1
 490 0033 02       		.uleb128 0x2
 491 0034 02       		.byte	0x2
 492 0035 05       		.byte	0x5
 493 0036 E0010000 		.4byte	.LASF2
 494 003a 02       		.uleb128 0x2
 495 003b 02       		.byte	0x2
 496 003c 07       		.byte	0x7
 497 003d 41000000 		.4byte	.LASF3
 498 0041 02       		.uleb128 0x2
 499 0042 04       		.byte	0x4
 500 0043 05       		.byte	0x5
 501 0044 4C030000 		.4byte	.LASF4
 502 0048 02       		.uleb128 0x2
 503 0049 04       		.byte	0x4
 504 004a 07       		.byte	0x7
 505 004b 19010000 		.4byte	.LASF5
 506 004f 02       		.uleb128 0x2
 507 0050 08       		.byte	0x8
 508 0051 05       		.byte	0x5
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 18


 509 0052 FC020000 		.4byte	.LASF6
 510 0056 02       		.uleb128 0x2
 511 0057 08       		.byte	0x8
 512 0058 07       		.byte	0x7
 513 0059 18020000 		.4byte	.LASF7
 514 005d 03       		.uleb128 0x3
 515 005e 04       		.byte	0x4
 516 005f 05       		.byte	0x5
 517 0060 696E7400 		.ascii	"int\000"
 518 0064 02       		.uleb128 0x2
 519 0065 04       		.byte	0x4
 520 0066 07       		.byte	0x7
 521 0067 0B020000 		.4byte	.LASF8
 522 006b 04       		.uleb128 0x4
 523 006c 2B010000 		.4byte	.LASF9
 524 0070 02       		.byte	0x2
 525 0071 E401     		.2byte	0x1e4
 526 0073 2C000000 		.4byte	0x2c
 527 0077 04       		.uleb128 0x4
 528 0078 EA010000 		.4byte	.LASF10
 529 007c 02       		.byte	0x2
 530 007d E501     		.2byte	0x1e5
 531 007f 3A000000 		.4byte	0x3a
 532 0083 02       		.uleb128 0x2
 533 0084 04       		.byte	0x4
 534 0085 04       		.byte	0x4
 535 0086 81000000 		.4byte	.LASF11
 536 008a 02       		.uleb128 0x2
 537 008b 08       		.byte	0x8
 538 008c 04       		.byte	0x4
 539 008d D9010000 		.4byte	.LASF12
 540 0091 02       		.uleb128 0x2
 541 0092 01       		.byte	0x1
 542 0093 08       		.byte	0x8
 543 0094 0A030000 		.4byte	.LASF13
 544 0098 04       		.uleb128 0x4
 545 0099 FF000000 		.4byte	.LASF14
 546 009d 02       		.byte	0x2
 547 009e 8E02     		.2byte	0x28e
 548 00a0 A4000000 		.4byte	0xa4
 549 00a4 05       		.uleb128 0x5
 550 00a5 6B000000 		.4byte	0x6b
 551 00a9 04       		.uleb128 0x4
 552 00aa 00000000 		.4byte	.LASF15
 553 00ae 02       		.byte	0x2
 554 00af 8F02     		.2byte	0x28f
 555 00b1 B5000000 		.4byte	0xb5
 556 00b5 05       		.uleb128 0x5
 557 00b6 77000000 		.4byte	0x77
 558 00ba 02       		.uleb128 0x2
 559 00bb 08       		.byte	0x8
 560 00bc 04       		.byte	0x4
 561 00bd 55030000 		.4byte	.LASF16
 562 00c1 02       		.uleb128 0x2
 563 00c2 04       		.byte	0x4
 564 00c3 07       		.byte	0x7
 565 00c4 DF020000 		.4byte	.LASF17
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 19


 566 00c8 06       		.uleb128 0x6
 567 00c9 6B000000 		.4byte	.LASF18
 568 00cd 01       		.byte	0x1
 569 00ce 8F       		.byte	0x8f
 570 00cf 00000000 		.4byte	.LFB1
 571 00d3 28000000 		.4byte	.LFE1-.LFB1
 572 00d7 01       		.uleb128 0x1
 573 00d8 9C       		.byte	0x9c
 574 00d9 06       		.uleb128 0x6
 575 00da 06000000 		.4byte	.LASF19
 576 00de 01       		.byte	0x1
 577 00df D0       		.byte	0xd0
 578 00e0 00000000 		.4byte	.LFB3
 579 00e4 28000000 		.4byte	.LFE3-.LFB3
 580 00e8 01       		.uleb128 0x1
 581 00e9 9C       		.byte	0x9c
 582 00ea 07       		.uleb128 0x7
 583 00eb 1A000000 		.4byte	.LASF22
 584 00ef 01       		.byte	0x1
 585 00f0 ED       		.byte	0xed
 586 00f1 00000000 		.4byte	.LFB4
 587 00f5 0C000000 		.4byte	.LFE4-.LFB4
 588 00f9 01       		.uleb128 0x1
 589 00fa 9C       		.byte	0x9c
 590 00fb 0D010000 		.4byte	0x10d
 591 00ff 08       		.uleb128 0x8
 592 0100 39010000 		.4byte	.LASF24
 593 0104 01       		.byte	0x1
 594 0105 ED       		.byte	0xed
 595 0106 6B000000 		.4byte	0x6b
 596 010a 01       		.uleb128 0x1
 597 010b 50       		.byte	0x50
 598 010c 00       		.byte	0
 599 010d 09       		.uleb128 0x9
 600 010e 0F030000 		.4byte	.LASF20
 601 0112 01       		.byte	0x1
 602 0113 0501     		.2byte	0x105
 603 0115 6B000000 		.4byte	0x6b
 604 0119 00000000 		.4byte	.LFB5
 605 011d 0C000000 		.4byte	.LFE5-.LFB5
 606 0121 01       		.uleb128 0x1
 607 0122 9C       		.byte	0x9c
 608 0123 09       		.uleb128 0x9
 609 0124 8F000000 		.4byte	.LASF21
 610 0128 01       		.byte	0x1
 611 0129 1B01     		.2byte	0x11b
 612 012b 6B000000 		.4byte	0x6b
 613 012f 00000000 		.4byte	.LFB6
 614 0133 0C000000 		.4byte	.LFE6-.LFB6
 615 0137 01       		.uleb128 0x1
 616 0138 9C       		.byte	0x9c
 617 0139 0A       		.uleb128 0xa
 618 013a DB000000 		.4byte	.LASF23
 619 013e 01       		.byte	0x1
 620 013f 3001     		.2byte	0x130
 621 0141 00000000 		.4byte	.LFB7
 622 0145 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 20


 623 0149 01       		.uleb128 0x1
 624 014a 9C       		.byte	0x9c
 625 014b 5E010000 		.4byte	0x15e
 626 014f 0B       		.uleb128 0xb
 627 0150 31010000 		.4byte	.LASF25
 628 0154 01       		.byte	0x1
 629 0155 3001     		.2byte	0x130
 630 0157 6B000000 		.4byte	0x6b
 631 015b 01       		.uleb128 0x1
 632 015c 50       		.byte	0x50
 633 015d 00       		.byte	0
 634 015e 0A       		.uleb128 0xa
 635 015f 95010000 		.4byte	.LASF26
 636 0163 01       		.byte	0x1
 637 0164 4601     		.2byte	0x146
 638 0166 00000000 		.4byte	.LFB8
 639 016a 34000000 		.4byte	.LFE8-.LFB8
 640 016e 01       		.uleb128 0x1
 641 016f 9C       		.byte	0x9c
 642 0170 94010000 		.4byte	0x194
 643 0174 0C       		.uleb128 0xc
 644 0175 87000000 		.4byte	.LASF27
 645 0179 01       		.byte	0x1
 646 017a 4601     		.2byte	0x146
 647 017c 77000000 		.4byte	0x77
 648 0180 00000000 		.4byte	.LLST0
 649 0184 0D       		.uleb128 0xd
 650 0185 14000000 		.4byte	.LVL4
 651 0189 7F020000 		.4byte	0x27f
 652 018d 0E       		.uleb128 0xe
 653 018e 01       		.uleb128 0x1
 654 018f 50       		.byte	0x50
 655 0190 01       		.uleb128 0x1
 656 0191 30       		.byte	0x30
 657 0192 00       		.byte	0
 658 0193 00       		.byte	0
 659 0194 09       		.uleb128 0x9
 660 0195 2F020000 		.4byte	.LASF28
 661 0199 01       		.byte	0x1
 662 019a 6501     		.2byte	0x165
 663 019c 77000000 		.4byte	0x77
 664 01a0 00000000 		.4byte	.LFB9
 665 01a4 14000000 		.4byte	.LFE9-.LFB9
 666 01a8 01       		.uleb128 0x1
 667 01a9 9C       		.byte	0x9c
 668 01aa 09       		.uleb128 0x9
 669 01ab C0000000 		.4byte	.LASF29
 670 01af 01       		.byte	0x1
 671 01b0 8601     		.2byte	0x186
 672 01b2 77000000 		.4byte	0x77
 673 01b6 00000000 		.4byte	.LFB10
 674 01ba 0C000000 		.4byte	.LFE10-.LFB10
 675 01be 01       		.uleb128 0x1
 676 01bf 9C       		.byte	0x9c
 677 01c0 0A       		.uleb128 0xa
 678 01c1 31030000 		.4byte	.LASF30
 679 01c5 01       		.byte	0x1
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 21


 680 01c6 9F01     		.2byte	0x19f
 681 01c8 00000000 		.4byte	.LFB11
 682 01cc 0C000000 		.4byte	.LFE11-.LFB11
 683 01d0 01       		.uleb128 0x1
 684 01d1 9C       		.byte	0x9c
 685 01d2 E5010000 		.4byte	0x1e5
 686 01d6 0B       		.uleb128 0xb
 687 01d7 3A000000 		.4byte	.LASF31
 688 01db 01       		.byte	0x1
 689 01dc 9F01     		.2byte	0x19f
 690 01de 77000000 		.4byte	0x77
 691 01e2 01       		.uleb128 0x1
 692 01e3 50       		.byte	0x50
 693 01e4 00       		.byte	0
 694 01e5 07       		.uleb128 0x7
 695 01e6 E8020000 		.4byte	.LASF32
 696 01ea 01       		.byte	0x1
 697 01eb 25       		.byte	0x25
 698 01ec 00000000 		.4byte	.LFB0
 699 01f0 60000000 		.4byte	.LFE0-.LFB0
 700 01f4 01       		.uleb128 0x1
 701 01f5 9C       		.byte	0x9c
 702 01f6 30020000 		.4byte	0x230
 703 01fa 0F       		.uleb128 0xf
 704 01fb 48000000 		.4byte	.LVL6
 705 01ff C0010000 		.4byte	0x1c0
 706 0203 0D020000 		.4byte	0x20d
 707 0207 0E       		.uleb128 0xe
 708 0208 01       		.uleb128 0x1
 709 0209 50       		.byte	0x50
 710 020a 01       		.uleb128 0x1
 711 020b 31       		.byte	0x31
 712 020c 00       		.byte	0
 713 020d 0F       		.uleb128 0xf
 714 020e 4E000000 		.4byte	.LVL7
 715 0212 5E010000 		.4byte	0x15e
 716 0216 20020000 		.4byte	0x220
 717 021a 0E       		.uleb128 0xe
 718 021b 01       		.uleb128 0x1
 719 021c 50       		.byte	0x50
 720 021d 01       		.uleb128 0x1
 721 021e 30       		.byte	0x30
 722 021f 00       		.byte	0
 723 0220 0D       		.uleb128 0xd
 724 0221 54000000 		.4byte	.LVL8
 725 0225 EA000000 		.4byte	0xea
 726 0229 0E       		.uleb128 0xe
 727 022a 01       		.uleb128 0x1
 728 022b 50       		.byte	0x50
 729 022c 01       		.uleb128 0x1
 730 022d 30       		.byte	0x30
 731 022e 00       		.byte	0
 732 022f 00       		.byte	0
 733 0230 07       		.uleb128 0x7
 734 0231 04010000 		.4byte	.LASF33
 735 0235 01       		.byte	0x1
 736 0236 B2       		.byte	0xb2
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 22


 737 0237 00000000 		.4byte	.LFB2
 738 023b 1C000000 		.4byte	.LFE2-.LFB2
 739 023f 01       		.uleb128 0x1
 740 0240 9C       		.byte	0x9c
 741 0241 58020000 		.4byte	0x258
 742 0245 10       		.uleb128 0x10
 743 0246 0C000000 		.4byte	.LVL9
 744 024a E5010000 		.4byte	0x1e5
 745 024e 10       		.uleb128 0x10
 746 024f 16000000 		.4byte	.LVL10
 747 0253 C8000000 		.4byte	0xc8
 748 0257 00       		.byte	0
 749 0258 09       		.uleb128 0x9
 750 0259 F1010000 		.4byte	.LASF34
 751 025d 01       		.byte	0x1
 752 025e B601     		.2byte	0x1b6
 753 0260 77000000 		.4byte	0x77
 754 0264 00000000 		.4byte	.LFB12
 755 0268 0C000000 		.4byte	.LFE12-.LFB12
 756 026c 01       		.uleb128 0x1
 757 026d 9C       		.byte	0x9c
 758 026e 11       		.uleb128 0x11
 759 026f 54000000 		.4byte	.LASF38
 760 0273 01       		.byte	0x1
 761 0274 15       		.byte	0x15
 762 0275 6B000000 		.4byte	0x6b
 763 0279 05       		.uleb128 0x5
 764 027a 03       		.byte	0x3
 765 027b 00000000 		.4byte	SpeakerCounter_initVar
 766 027f 12       		.uleb128 0x12
 767 0280 4A020000 		.4byte	.LASF39
 768 0284 4A020000 		.4byte	.LASF39
 769 0288 03       		.byte	0x3
 770 0289 7F       		.byte	0x7f
 771 028a 00       		.byte	0
 772              		.section	.debug_abbrev,"",%progbits
 773              	.Ldebug_abbrev0:
 774 0000 01       		.uleb128 0x1
 775 0001 11       		.uleb128 0x11
 776 0002 01       		.byte	0x1
 777 0003 25       		.uleb128 0x25
 778 0004 0E       		.uleb128 0xe
 779 0005 13       		.uleb128 0x13
 780 0006 0B       		.uleb128 0xb
 781 0007 03       		.uleb128 0x3
 782 0008 0E       		.uleb128 0xe
 783 0009 1B       		.uleb128 0x1b
 784 000a 0E       		.uleb128 0xe
 785 000b 55       		.uleb128 0x55
 786 000c 17       		.uleb128 0x17
 787 000d 11       		.uleb128 0x11
 788 000e 01       		.uleb128 0x1
 789 000f 10       		.uleb128 0x10
 790 0010 17       		.uleb128 0x17
 791 0011 00       		.byte	0
 792 0012 00       		.byte	0
 793 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 23


 794 0014 24       		.uleb128 0x24
 795 0015 00       		.byte	0
 796 0016 0B       		.uleb128 0xb
 797 0017 0B       		.uleb128 0xb
 798 0018 3E       		.uleb128 0x3e
 799 0019 0B       		.uleb128 0xb
 800 001a 03       		.uleb128 0x3
 801 001b 0E       		.uleb128 0xe
 802 001c 00       		.byte	0
 803 001d 00       		.byte	0
 804 001e 03       		.uleb128 0x3
 805 001f 24       		.uleb128 0x24
 806 0020 00       		.byte	0
 807 0021 0B       		.uleb128 0xb
 808 0022 0B       		.uleb128 0xb
 809 0023 3E       		.uleb128 0x3e
 810 0024 0B       		.uleb128 0xb
 811 0025 03       		.uleb128 0x3
 812 0026 08       		.uleb128 0x8
 813 0027 00       		.byte	0
 814 0028 00       		.byte	0
 815 0029 04       		.uleb128 0x4
 816 002a 16       		.uleb128 0x16
 817 002b 00       		.byte	0
 818 002c 03       		.uleb128 0x3
 819 002d 0E       		.uleb128 0xe
 820 002e 3A       		.uleb128 0x3a
 821 002f 0B       		.uleb128 0xb
 822 0030 3B       		.uleb128 0x3b
 823 0031 05       		.uleb128 0x5
 824 0032 49       		.uleb128 0x49
 825 0033 13       		.uleb128 0x13
 826 0034 00       		.byte	0
 827 0035 00       		.byte	0
 828 0036 05       		.uleb128 0x5
 829 0037 35       		.uleb128 0x35
 830 0038 00       		.byte	0
 831 0039 49       		.uleb128 0x49
 832 003a 13       		.uleb128 0x13
 833 003b 00       		.byte	0
 834 003c 00       		.byte	0
 835 003d 06       		.uleb128 0x6
 836 003e 2E       		.uleb128 0x2e
 837 003f 00       		.byte	0
 838 0040 3F       		.uleb128 0x3f
 839 0041 19       		.uleb128 0x19
 840 0042 03       		.uleb128 0x3
 841 0043 0E       		.uleb128 0xe
 842 0044 3A       		.uleb128 0x3a
 843 0045 0B       		.uleb128 0xb
 844 0046 3B       		.uleb128 0x3b
 845 0047 0B       		.uleb128 0xb
 846 0048 27       		.uleb128 0x27
 847 0049 19       		.uleb128 0x19
 848 004a 11       		.uleb128 0x11
 849 004b 01       		.uleb128 0x1
 850 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 24


 851 004d 06       		.uleb128 0x6
 852 004e 40       		.uleb128 0x40
 853 004f 18       		.uleb128 0x18
 854 0050 9742     		.uleb128 0x2117
 855 0052 19       		.uleb128 0x19
 856 0053 00       		.byte	0
 857 0054 00       		.byte	0
 858 0055 07       		.uleb128 0x7
 859 0056 2E       		.uleb128 0x2e
 860 0057 01       		.byte	0x1
 861 0058 3F       		.uleb128 0x3f
 862 0059 19       		.uleb128 0x19
 863 005a 03       		.uleb128 0x3
 864 005b 0E       		.uleb128 0xe
 865 005c 3A       		.uleb128 0x3a
 866 005d 0B       		.uleb128 0xb
 867 005e 3B       		.uleb128 0x3b
 868 005f 0B       		.uleb128 0xb
 869 0060 27       		.uleb128 0x27
 870 0061 19       		.uleb128 0x19
 871 0062 11       		.uleb128 0x11
 872 0063 01       		.uleb128 0x1
 873 0064 12       		.uleb128 0x12
 874 0065 06       		.uleb128 0x6
 875 0066 40       		.uleb128 0x40
 876 0067 18       		.uleb128 0x18
 877 0068 9742     		.uleb128 0x2117
 878 006a 19       		.uleb128 0x19
 879 006b 01       		.uleb128 0x1
 880 006c 13       		.uleb128 0x13
 881 006d 00       		.byte	0
 882 006e 00       		.byte	0
 883 006f 08       		.uleb128 0x8
 884 0070 05       		.uleb128 0x5
 885 0071 00       		.byte	0
 886 0072 03       		.uleb128 0x3
 887 0073 0E       		.uleb128 0xe
 888 0074 3A       		.uleb128 0x3a
 889 0075 0B       		.uleb128 0xb
 890 0076 3B       		.uleb128 0x3b
 891 0077 0B       		.uleb128 0xb
 892 0078 49       		.uleb128 0x49
 893 0079 13       		.uleb128 0x13
 894 007a 02       		.uleb128 0x2
 895 007b 18       		.uleb128 0x18
 896 007c 00       		.byte	0
 897 007d 00       		.byte	0
 898 007e 09       		.uleb128 0x9
 899 007f 2E       		.uleb128 0x2e
 900 0080 00       		.byte	0
 901 0081 3F       		.uleb128 0x3f
 902 0082 19       		.uleb128 0x19
 903 0083 03       		.uleb128 0x3
 904 0084 0E       		.uleb128 0xe
 905 0085 3A       		.uleb128 0x3a
 906 0086 0B       		.uleb128 0xb
 907 0087 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 25


 908 0088 05       		.uleb128 0x5
 909 0089 27       		.uleb128 0x27
 910 008a 19       		.uleb128 0x19
 911 008b 49       		.uleb128 0x49
 912 008c 13       		.uleb128 0x13
 913 008d 11       		.uleb128 0x11
 914 008e 01       		.uleb128 0x1
 915 008f 12       		.uleb128 0x12
 916 0090 06       		.uleb128 0x6
 917 0091 40       		.uleb128 0x40
 918 0092 18       		.uleb128 0x18
 919 0093 9742     		.uleb128 0x2117
 920 0095 19       		.uleb128 0x19
 921 0096 00       		.byte	0
 922 0097 00       		.byte	0
 923 0098 0A       		.uleb128 0xa
 924 0099 2E       		.uleb128 0x2e
 925 009a 01       		.byte	0x1
 926 009b 3F       		.uleb128 0x3f
 927 009c 19       		.uleb128 0x19
 928 009d 03       		.uleb128 0x3
 929 009e 0E       		.uleb128 0xe
 930 009f 3A       		.uleb128 0x3a
 931 00a0 0B       		.uleb128 0xb
 932 00a1 3B       		.uleb128 0x3b
 933 00a2 05       		.uleb128 0x5
 934 00a3 27       		.uleb128 0x27
 935 00a4 19       		.uleb128 0x19
 936 00a5 11       		.uleb128 0x11
 937 00a6 01       		.uleb128 0x1
 938 00a7 12       		.uleb128 0x12
 939 00a8 06       		.uleb128 0x6
 940 00a9 40       		.uleb128 0x40
 941 00aa 18       		.uleb128 0x18
 942 00ab 9742     		.uleb128 0x2117
 943 00ad 19       		.uleb128 0x19
 944 00ae 01       		.uleb128 0x1
 945 00af 13       		.uleb128 0x13
 946 00b0 00       		.byte	0
 947 00b1 00       		.byte	0
 948 00b2 0B       		.uleb128 0xb
 949 00b3 05       		.uleb128 0x5
 950 00b4 00       		.byte	0
 951 00b5 03       		.uleb128 0x3
 952 00b6 0E       		.uleb128 0xe
 953 00b7 3A       		.uleb128 0x3a
 954 00b8 0B       		.uleb128 0xb
 955 00b9 3B       		.uleb128 0x3b
 956 00ba 05       		.uleb128 0x5
 957 00bb 49       		.uleb128 0x49
 958 00bc 13       		.uleb128 0x13
 959 00bd 02       		.uleb128 0x2
 960 00be 18       		.uleb128 0x18
 961 00bf 00       		.byte	0
 962 00c0 00       		.byte	0
 963 00c1 0C       		.uleb128 0xc
 964 00c2 05       		.uleb128 0x5
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 26


 965 00c3 00       		.byte	0
 966 00c4 03       		.uleb128 0x3
 967 00c5 0E       		.uleb128 0xe
 968 00c6 3A       		.uleb128 0x3a
 969 00c7 0B       		.uleb128 0xb
 970 00c8 3B       		.uleb128 0x3b
 971 00c9 05       		.uleb128 0x5
 972 00ca 49       		.uleb128 0x49
 973 00cb 13       		.uleb128 0x13
 974 00cc 02       		.uleb128 0x2
 975 00cd 17       		.uleb128 0x17
 976 00ce 00       		.byte	0
 977 00cf 00       		.byte	0
 978 00d0 0D       		.uleb128 0xd
 979 00d1 898201   		.uleb128 0x4109
 980 00d4 01       		.byte	0x1
 981 00d5 11       		.uleb128 0x11
 982 00d6 01       		.uleb128 0x1
 983 00d7 31       		.uleb128 0x31
 984 00d8 13       		.uleb128 0x13
 985 00d9 00       		.byte	0
 986 00da 00       		.byte	0
 987 00db 0E       		.uleb128 0xe
 988 00dc 8A8201   		.uleb128 0x410a
 989 00df 00       		.byte	0
 990 00e0 02       		.uleb128 0x2
 991 00e1 18       		.uleb128 0x18
 992 00e2 9142     		.uleb128 0x2111
 993 00e4 18       		.uleb128 0x18
 994 00e5 00       		.byte	0
 995 00e6 00       		.byte	0
 996 00e7 0F       		.uleb128 0xf
 997 00e8 898201   		.uleb128 0x4109
 998 00eb 01       		.byte	0x1
 999 00ec 11       		.uleb128 0x11
 1000 00ed 01       		.uleb128 0x1
 1001 00ee 31       		.uleb128 0x31
 1002 00ef 13       		.uleb128 0x13
 1003 00f0 01       		.uleb128 0x1
 1004 00f1 13       		.uleb128 0x13
 1005 00f2 00       		.byte	0
 1006 00f3 00       		.byte	0
 1007 00f4 10       		.uleb128 0x10
 1008 00f5 898201   		.uleb128 0x4109
 1009 00f8 00       		.byte	0
 1010 00f9 11       		.uleb128 0x11
 1011 00fa 01       		.uleb128 0x1
 1012 00fb 31       		.uleb128 0x31
 1013 00fc 13       		.uleb128 0x13
 1014 00fd 00       		.byte	0
 1015 00fe 00       		.byte	0
 1016 00ff 11       		.uleb128 0x11
 1017 0100 34       		.uleb128 0x34
 1018 0101 00       		.byte	0
 1019 0102 03       		.uleb128 0x3
 1020 0103 0E       		.uleb128 0xe
 1021 0104 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 27


 1022 0105 0B       		.uleb128 0xb
 1023 0106 3B       		.uleb128 0x3b
 1024 0107 0B       		.uleb128 0xb
 1025 0108 49       		.uleb128 0x49
 1026 0109 13       		.uleb128 0x13
 1027 010a 3F       		.uleb128 0x3f
 1028 010b 19       		.uleb128 0x19
 1029 010c 02       		.uleb128 0x2
 1030 010d 18       		.uleb128 0x18
 1031 010e 00       		.byte	0
 1032 010f 00       		.byte	0
 1033 0110 12       		.uleb128 0x12
 1034 0111 2E       		.uleb128 0x2e
 1035 0112 00       		.byte	0
 1036 0113 3F       		.uleb128 0x3f
 1037 0114 19       		.uleb128 0x19
 1038 0115 3C       		.uleb128 0x3c
 1039 0116 19       		.uleb128 0x19
 1040 0117 6E       		.uleb128 0x6e
 1041 0118 0E       		.uleb128 0xe
 1042 0119 03       		.uleb128 0x3
 1043 011a 0E       		.uleb128 0xe
 1044 011b 3A       		.uleb128 0x3a
 1045 011c 0B       		.uleb128 0xb
 1046 011d 3B       		.uleb128 0x3b
 1047 011e 0B       		.uleb128 0xb
 1048 011f 00       		.byte	0
 1049 0120 00       		.byte	0
 1050 0121 00       		.byte	0
 1051              		.section	.debug_loc,"",%progbits
 1052              	.Ldebug_loc0:
 1053              	.LLST0:
 1054 0000 00000000 		.4byte	.LVL2
 1055 0004 10000000 		.4byte	.LVL3
 1056 0008 0100     		.2byte	0x1
 1057 000a 50       		.byte	0x50
 1058 000b 10000000 		.4byte	.LVL3
 1059 000f 34000000 		.4byte	.LFE8
 1060 0013 0400     		.2byte	0x4
 1061 0015 F3       		.byte	0xf3
 1062 0016 01       		.uleb128 0x1
 1063 0017 50       		.byte	0x50
 1064 0018 9F       		.byte	0x9f
 1065 0019 00000000 		.4byte	0
 1066 001d 00000000 		.4byte	0
 1067              		.section	.debug_aranges,"",%progbits
 1068 0000 7C000000 		.4byte	0x7c
 1069 0004 0200     		.2byte	0x2
 1070 0006 00000000 		.4byte	.Ldebug_info0
 1071 000a 04       		.byte	0x4
 1072 000b 00       		.byte	0
 1073 000c 0000     		.2byte	0
 1074 000e 0000     		.2byte	0
 1075 0010 00000000 		.4byte	.LFB1
 1076 0014 28000000 		.4byte	.LFE1-.LFB1
 1077 0018 00000000 		.4byte	.LFB3
 1078 001c 28000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 28


 1079 0020 00000000 		.4byte	.LFB4
 1080 0024 0C000000 		.4byte	.LFE4-.LFB4
 1081 0028 00000000 		.4byte	.LFB5
 1082 002c 0C000000 		.4byte	.LFE5-.LFB5
 1083 0030 00000000 		.4byte	.LFB6
 1084 0034 0C000000 		.4byte	.LFE6-.LFB6
 1085 0038 00000000 		.4byte	.LFB7
 1086 003c 0C000000 		.4byte	.LFE7-.LFB7
 1087 0040 00000000 		.4byte	.LFB8
 1088 0044 34000000 		.4byte	.LFE8-.LFB8
 1089 0048 00000000 		.4byte	.LFB9
 1090 004c 14000000 		.4byte	.LFE9-.LFB9
 1091 0050 00000000 		.4byte	.LFB10
 1092 0054 0C000000 		.4byte	.LFE10-.LFB10
 1093 0058 00000000 		.4byte	.LFB11
 1094 005c 0C000000 		.4byte	.LFE11-.LFB11
 1095 0060 00000000 		.4byte	.LFB0
 1096 0064 60000000 		.4byte	.LFE0-.LFB0
 1097 0068 00000000 		.4byte	.LFB2
 1098 006c 1C000000 		.4byte	.LFE2-.LFB2
 1099 0070 00000000 		.4byte	.LFB12
 1100 0074 0C000000 		.4byte	.LFE12-.LFB12
 1101 0078 00000000 		.4byte	0
 1102 007c 00000000 		.4byte	0
 1103              		.section	.debug_ranges,"",%progbits
 1104              	.Ldebug_ranges0:
 1105 0000 00000000 		.4byte	.LFB1
 1106 0004 28000000 		.4byte	.LFE1
 1107 0008 00000000 		.4byte	.LFB3
 1108 000c 28000000 		.4byte	.LFE3
 1109 0010 00000000 		.4byte	.LFB4
 1110 0014 0C000000 		.4byte	.LFE4
 1111 0018 00000000 		.4byte	.LFB5
 1112 001c 0C000000 		.4byte	.LFE5
 1113 0020 00000000 		.4byte	.LFB6
 1114 0024 0C000000 		.4byte	.LFE6
 1115 0028 00000000 		.4byte	.LFB7
 1116 002c 0C000000 		.4byte	.LFE7
 1117 0030 00000000 		.4byte	.LFB8
 1118 0034 34000000 		.4byte	.LFE8
 1119 0038 00000000 		.4byte	.LFB9
 1120 003c 14000000 		.4byte	.LFE9
 1121 0040 00000000 		.4byte	.LFB10
 1122 0044 0C000000 		.4byte	.LFE10
 1123 0048 00000000 		.4byte	.LFB11
 1124 004c 0C000000 		.4byte	.LFE11
 1125 0050 00000000 		.4byte	.LFB0
 1126 0054 60000000 		.4byte	.LFE0
 1127 0058 00000000 		.4byte	.LFB2
 1128 005c 1C000000 		.4byte	.LFE2
 1129 0060 00000000 		.4byte	.LFB12
 1130 0064 0C000000 		.4byte	.LFE12
 1131 0068 00000000 		.4byte	0
 1132 006c 00000000 		.4byte	0
 1133              		.section	.debug_line,"",%progbits
 1134              	.Ldebug_line0:
 1135 0000 5E010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 29


 1135      02005600 
 1135      00000201 
 1135      FB0E0D00 
 1135      01010101 
 1136              	.LASF15:
 1137 0000 72656731 		.ascii	"reg16\000"
 1137      3600
 1138              	.LASF19:
 1139 0006 53706561 		.ascii	"SpeakerCounter_Stop\000"
 1139      6B657243 
 1139      6F756E74 
 1139      65725F53 
 1139      746F7000 
 1140              	.LASF22:
 1141 001a 53706561 		.ascii	"SpeakerCounter_SetInterruptMode\000"
 1141      6B657243 
 1141      6F756E74 
 1141      65725F53 
 1141      6574496E 
 1142              	.LASF31:
 1143 003a 70657269 		.ascii	"period\000"
 1143      6F6400
 1144              	.LASF3:
 1145 0041 73686F72 		.ascii	"short unsigned int\000"
 1145      7420756E 
 1145      7369676E 
 1145      65642069 
 1145      6E7400
 1146              	.LASF38:
 1147 0054 53706561 		.ascii	"SpeakerCounter_initVar\000"
 1147      6B657243 
 1147      6F756E74 
 1147      65725F69 
 1147      6E697456 
 1148              	.LASF18:
 1149 006b 53706561 		.ascii	"SpeakerCounter_Enable\000"
 1149      6B657243 
 1149      6F756E74 
 1149      65725F45 
 1149      6E61626C 
 1150              	.LASF11:
 1151 0081 666C6F61 		.ascii	"float\000"
 1151      7400
 1152              	.LASF27:
 1153 0087 636F756E 		.ascii	"counter\000"
 1153      74657200 
 1154              	.LASF21:
 1155 008f 53706561 		.ascii	"SpeakerCounter_ReadControlRegister\000"
 1155      6B657243 
 1155      6F756E74 
 1155      65725F52 
 1155      65616443 
 1156              	.LASF1:
 1157 00b2 756E7369 		.ascii	"unsigned char\000"
 1157      676E6564 
 1157      20636861 
 1157      7200
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 30


 1158              	.LASF29:
 1159 00c0 53706561 		.ascii	"SpeakerCounter_ReadCapture\000"
 1159      6B657243 
 1159      6F756E74 
 1159      65725F52 
 1159      65616443 
 1160              	.LASF23:
 1161 00db 53706561 		.ascii	"SpeakerCounter_WriteControlRegister\000"
 1161      6B657243 
 1161      6F756E74 
 1161      65725F57 
 1161      72697465 
 1162              	.LASF14:
 1163 00ff 72656738 		.ascii	"reg8\000"
 1163      00
 1164              	.LASF33:
 1165 0104 53706561 		.ascii	"SpeakerCounter_Start\000"
 1165      6B657243 
 1165      6F756E74 
 1165      65725F53 
 1165      74617274 
 1166              	.LASF5:
 1167 0119 6C6F6E67 		.ascii	"long unsigned int\000"
 1167      20756E73 
 1167      69676E65 
 1167      6420696E 
 1167      7400
 1168              	.LASF9:
 1169 012b 75696E74 		.ascii	"uint8\000"
 1169      3800
 1170              	.LASF25:
 1171 0131 636F6E74 		.ascii	"control\000"
 1171      726F6C00 
 1172              	.LASF24:
 1173 0139 696E7465 		.ascii	"interruptsMask\000"
 1173      72727570 
 1173      74734D61 
 1173      736B00
 1174              	.LASF37:
 1175 0148 433A5C55 		.ascii	"C:\\Users\\dshen\\Documents\\school\\me135\\symphon"
 1175      73657273 
 1175      5C647368 
 1175      656E5C44 
 1175      6F63756D 
 1176 0175 6975735C 		.ascii	"ius\\Symphonius\\Symphonius.cydsn\000"
 1176      53796D70 
 1176      686F6E69 
 1176      75735C53 
 1176      796D7068 
 1177              	.LASF26:
 1178 0195 53706561 		.ascii	"SpeakerCounter_WriteCounter\000"
 1178      6B657243 
 1178      6F756E74 
 1178      65725F57 
 1178      72697465 
 1179              	.LASF36:
 1180 01b1 47656E65 		.ascii	"Generated_Source\\PSoC5\\SpeakerCounter.c\000"
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 31


 1180      72617465 
 1180      645F536F 
 1180      75726365 
 1180      5C50536F 
 1181              	.LASF12:
 1182 01d9 646F7562 		.ascii	"double\000"
 1182      6C6500
 1183              	.LASF2:
 1184 01e0 73686F72 		.ascii	"short int\000"
 1184      7420696E 
 1184      7400
 1185              	.LASF10:
 1186 01ea 75696E74 		.ascii	"uint16\000"
 1186      313600
 1187              	.LASF34:
 1188 01f1 53706561 		.ascii	"SpeakerCounter_ReadPeriod\000"
 1188      6B657243 
 1188      6F756E74 
 1188      65725F52 
 1188      65616450 
 1189              	.LASF8:
 1190 020b 756E7369 		.ascii	"unsigned int\000"
 1190      676E6564 
 1190      20696E74 
 1190      00
 1191              	.LASF7:
 1192 0218 6C6F6E67 		.ascii	"long long unsigned int\000"
 1192      206C6F6E 
 1192      6720756E 
 1192      7369676E 
 1192      65642069 
 1193              	.LASF28:
 1194 022f 53706561 		.ascii	"SpeakerCounter_ReadCounter\000"
 1194      6B657243 
 1194      6F756E74 
 1194      65725F52 
 1194      65616443 
 1195              	.LASF39:
 1196 024a 43794861 		.ascii	"CyHalt\000"
 1196      6C7400
 1197              	.LASF35:
 1198 0251 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1198      43313120 
 1198      352E342E 
 1198      31203230 
 1198      31363036 
 1199 0284 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1199      20726576 
 1199      6973696F 
 1199      6E203233 
 1199      37373135 
 1200 02b7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1200      66756E63 
 1200      74696F6E 
 1200      2D736563 
 1200      74696F6E 
 1201              	.LASF17:
ARM GAS  C:\Users\dshen\AppData\Local\Temp\ccKbqRfr.s 			page 32


 1202 02df 73697A65 		.ascii	"sizetype\000"
 1202      74797065 
 1202      00
 1203              	.LASF32:
 1204 02e8 53706561 		.ascii	"SpeakerCounter_Init\000"
 1204      6B657243 
 1204      6F756E74 
 1204      65725F49 
 1204      6E697400 
 1205              	.LASF6:
 1206 02fc 6C6F6E67 		.ascii	"long long int\000"
 1206      206C6F6E 
 1206      6720696E 
 1206      7400
 1207              	.LASF13:
 1208 030a 63686172 		.ascii	"char\000"
 1208      00
 1209              	.LASF20:
 1210 030f 53706561 		.ascii	"SpeakerCounter_ReadStatusRegister\000"
 1210      6B657243 
 1210      6F756E74 
 1210      65725F52 
 1210      65616453 
 1211              	.LASF30:
 1212 0331 53706561 		.ascii	"SpeakerCounter_WritePeriod\000"
 1212      6B657243 
 1212      6F756E74 
 1212      65725F57 
 1212      72697465 
 1213              	.LASF4:
 1214 034c 6C6F6E67 		.ascii	"long int\000"
 1214      20696E74 
 1214      00
 1215              	.LASF16:
 1216 0355 6C6F6E67 		.ascii	"long double\000"
 1216      20646F75 
 1216      626C6500 
 1217              	.LASF0:
 1218 0361 7369676E 		.ascii	"signed char\000"
 1218      65642063 
 1218      68617200 
 1219              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
